name: bench GHA against GitLab
on:
  pull_request:
  push:

jobs:
  bench_gh:
    runs-on:                       self-hosted
    env:
      RUSTC_WRAPPER:               ""
      CARGO_INCREMENTAL:           0
      RUSTUP_HOME:                 /usr/local/rustup
      CARGO_HOME:                  /usr/local/cargo
      PATH:                        /usr/local/cargo/bin:$PATH
      CC:                          clang
      CXX:                         clang

    steps:
      - name:                      Cancel Previous Runs
        uses:                      styfle/cancel-workflow-action@0.9.1
        with:
          access_token:            ${{ github.token }}

      - name:                      Install dependencies
        run:                       |
          apt-get -y update
          apt-get install -y --no-install-recommends
            curl time clang

        # libssl-dev lld libclang-dev make cmake
        # git pkg-config rhash ca-certificates lsof

      - name:                      Install Rust
        run:                       |
          curl -L "https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init" -o rustup-init
          chmod +x rustup-init
          ./rustup-init -y --no-modify-path --profile minimal --default-toolchain stable
          rm rustup-init
          chmod -R a+w ${RUSTUP_HOME} ${CARGO_HOME}

      - name:                      Checkout sources
        uses:                      actions/checkout@master

      # - name:                      Install Toolchain
      #   run:                       rustup toolchain add nightly-2020-12-17
      
      # - name:                      Add WASM Utilities
      #   run:                       rustup target add wasm32-unknown-unknown --toolchain nightly-2020-12-17

      - name:                      bench-GHA-test-full-crypto-feature
        if:                        github.ref == 'refs/heads/master'
        shell:                     bash
        run:                       |
          unset RUSTC_WRAPPER
          START_TIME=`date '+%s'`
          cd primitives/core/
          time cargo +nightly build --verbose --no-default-features --features full_crypto
          cd ../application-crypto
          time cargo +nightly build --verbose --no-default-features --features full_crypto
          END_TIME=`date '+%s'`
          TOTAL_TIME=`expr $END_TIME - $START_TIME`
          curl -d "parity_gitlab_job_time{project=\"$CI_PROJECT_PATH\",job=\"$CI_JOB_NAME\",runner=\"gitlab\"} $TOTAL_TIME" -X POST $VM_LONGTERM_URI/api/v1/import/prometheus
